// Generated by CoffeeScript 1.8.0
var _base, _base1, _base2;

if ((_base = Array.prototype).compact == null) {
  _base.compact = function() {
    return this.filter(function(item) {
      return item != null;
    });
  };
}

if ((_base1 = Array.prototype).intersection == null) {
  _base1.intersection = function(other) {
    var a1, a2, hashMap, i, _i, _len;
    hashMap = {};
    if (this.length <= other.length) {
      a1 = this;
      a2 = other;
    } else {
      a1 = other;
      a2 = this;
    }
    for (_i = 0, _len = a1.length; _i < _len; _i++) {
      i = a1[_i];
      hashMap[i] = 1;
    }
    return (function() {
      var _j, _len1, _results;
      _results = [];
      for (_j = 0, _len1 = a2.length; _j < _len1; _j++) {
        i = a2[_j];
        if (hashMap[i] && hashMap[i] === 1) {
          _results.push(i);
        }
      }
      return _results;
    })();
  };
}

if ((_base2 = Array.prototype).find == null) {
  _base2.find = function(callback) {
    var element, index, _i, _len;
    for (index = _i = 0, _len = this.length; _i < _len; index = ++_i) {
      element = this[index];
      if (callback(element, index, this)) {
        return element;
      }
    }
    return null;
  };
}
